@model E_Shop_Engine.Website.Areas.Admin.Models.ProductViewModel

@{
    if (Model.Name != null)
    {
        ViewBag.Title = "Edit " + Model.Name;
    }
    else
    {
        ViewBag.Title = "New product";
    }

}

@if (Model.Name != null)
{
    <h3>Edit @Model.Name</h3>
}
@if (Model.Name == null)
{
    <h3>New product</h3>
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <hr />

    @Html.ValidationSummary(false, "", new { @class = "text-danger list-unstyled" })
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            @Html.LabelFor(model => model.Name, new { @class = "input-group-text" })
        </div>
        @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
    </div>

    <div class="input-group mb-3">
        <div class="input-group-prepend">
            @Html.LabelFor(model => model.Description, new { @class = "input-group-text" })
        </div>
        @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
    </div>

    <div class="input-group mb-3">
        <div class="input-group-prepend">
            @Html.LabelFor(model => model.Price, new { @class = "input-group-text" })
        </div>
        @Html.TextBoxFor(model => model.Price, new { @class = "form-control" })
    </div>

    <div class="input-group mb-3">
        <div class="input-group-prepend">
            @Html.LabelFor(model => model.NumberInStock, new { @class = "input-group-text" })
        </div>
        @Html.TextBoxFor(model => model.NumberInStock, new { @class = "form-control" })
    </div>

    <div class="input-group mb-3">
        <div class="input-group-prepend">
            @Html.LabelFor(model => model.CatalogNumber, new { @class = "input-group-text" })
        </div>
        @Html.TextBoxFor(model => model.CatalogNumber, new { @class = "form-control" })
    </div>

    <div class="input-group mb-3">
        <div class="custom-file">
            <div class="input-group-prepend">
                @Html.LabelFor(model => model.ImageData, "Select image...", new { @class = "custom-file-label" })
            </div>
            <input type="file" class="custom-file-input" id="ImageData" name="ImageData">
            @Html.HiddenFor(model => model.ImageBytes)
            @Html.HiddenFor(model => model.ImageMimeType)
        </div>
    </div>

    <img id="ImgPreview" class="img-fluid d-block mx-auto mb-3" width="150" height="150"
         src="@Url.Action("GetImage", "Product", new { Model.Id })" />

    <div class="input-group mb-3">
        <div class="input-group-prepend">
            @Html.LabelFor(model => model.CategoryId, "Select category...", new { @class = "input-group-text" })
        </div>
        @Html.DropDownListFor(model => model.CategoryId, new SelectList(Model.Categories, "Id", "Name"), new { @class = "custom-select" })
    </div>

    <div class="input-group mb-3">
        <div class="input-group-prepend">
            @Html.LabelFor(model => model.SubcategoryId, "Select subcategory...", new { @class = "input-group-text" })
        </div>
        @Html.DropDownListFor(model => model.SubcategoryId, new SelectList(Model.Subcategories, "Id", "Name"), "", new { @class = "custom-select" })
    </div>

    <div class="custom-control custom-checkbox form-control-lg">
        @Html.CheckBoxFor(model => model.ShowAsSpecialOffer, new { @class = "custom-control-input" })
        @Html.LabelFor(model => model.ShowAsSpecialOffer, htmlAttributes: new { @class = "custom-control-label" })
    </div>

    <div class="custom-control custom-checkbox form-control-lg">
        @Html.CheckBoxFor(model => model.ShowAtMainPage, new { @class = "custom-control-input" })
        @Html.LabelFor(model => model.ShowAtMainPage, htmlAttributes: new { @class = "custom-control-label" })
    </div>

    @Html.HiddenFor(model => model.Created)
    @Html.HiddenFor(model => model.ReturnUrl)

    <div class="input-group mb-3 my-3 d-flex justify-content-around">
        <a class="btn btn-secondary btn-lg text-white" href="@Model.ReturnUrl">Go back</a>
        <input type="submit" value="Save" class="btn btn-success btn-lg" />
    </div>
}

<script type="text/javascript">
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#ImgPreview').attr('src', e.target.result);
            }
            reader.readAsDataURL(input.files[0]);
        }
    }

    $("#ImageData").change(function () {
        readURL(this);
    });

    $.validator.methods.range = function (value, element, param) {
        var globalizedValue = value.replace(",", ".");
        return this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);
    }

    $.validator.methods.number = function (value, element) {
        return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
    }
</script>
